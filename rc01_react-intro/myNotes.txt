cre////////////////
   REACT
///////////////

projeye baslamak :

istenilen dogrultuda plan cikar
font family yildiz * yerine body ye verilirse ne olur?
body e verilirse child lara ulasmiyor. her seye ulasmak istiyorsak yildiza verilmeli. daha kapsamli.



=> opensource tur.
=> node.js ders oncesi yuklenmeli.
=> githuba gonderilirken butun dosyalar gonderilmiyor.
=> “React is not opinionated, which means that it won’t force you to follow any 
specific design patterns, project organizational structure, or logic. 
It’s all up to you.
=> framework biselere zorlar kullanim acisindan , library de sana baglidir.
=> React is a JavaScript library for building user interfaces.
=> React is a view layer library, not a framework like Angular etc.
=> single page application dir.(aksi belirtilmedigi surece)
=> component base bi program
=> component: icinde html i css i ve js i var. tek element olusturuluyor.
=> Easy to read and understand views
=> If your page uses a lot of fast updating data
or real time data - React is the way to go

Framework : Komple bir sistemdir, ekosistemdir, bazı koşulları vardır. 
Bu framework'u kullanmak istiyorsak bu kurallara uymamız gerekiyor.
Library: Örnek olarak react verebiliriz, JS library'dir. Onu alıp kullanabiliriz ve daha esnektir. 
Şartlarına zorlamıyor. Kullanırsan iyi olur der. 
Harici kütüphaneler ile kullanılır daha çok. Örneğin, react rooter da 
kullanabiliriz başka bir harici kütüphanede.

Declarative : React will efficiently update and render just the right components when your data changes.
Declarative views make your code more predictable and easier to debug.

=> LEGO mantigi dusunulebliri. kucuk birimlerden buyuk bir yapi olusturuluyor.
=> https://reactjs.org/     ==> official page

=> ortayya cikis amaci : render sayisini azaltmak, sayfada her degisikilikte 
butun sayfanin her seferinde bastan render 
edilmesi zaman alan bir durum , bunun onune gecmek icin
=> cok icerik varsa kullanimi hizlidir.
=> dezavantaji seo acisindan.indexleme acisindan.
=> en buyuk artisi render sayisni azaltip hizli olmasi.
=> 2011 it was developed by facebook.
=> babeljs.io : eski surumere cevirmek icin kllanilan site. react bunu otomatik olarak yapiyor.

=> https://www-freecodecamp-org.cdn.ampproject.org/c/s/www.freecodecamp.org/news/top-javascript-concepts-to-know-before-learning-react/amp/
=> https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi/related?hl=en

=> react son yillarda cok populer ;
=> https://www.npmtrends.com/angular-vs-vue-vs-react


Real DOM is slow but React uses Virtual DOM and 
Virtual DOM is fast
● Easy to understand what a
component will render.
● Easy to mix HTML and JS (JSX)
● Uses full power of JS

Reactta ;
=> html kodlari js icine direk olarak yazilir.(jsx)
=> virtual dom (INTRWV) : hizli kullanimi saglar

=> https://medium.com/@muratbalci1/virtual-dom-nedir-8e3c95dcde5c

=> virtual dom un calisma prensibi :
react asil dom un bir kopyasini aliyor. bir guncelleme oldugunda o degisiminde kopyasini aliyor. 
sonra onceki kopya ile degisiklik olani kiyasliyor, 
farklari bulup degismesi gerekenler hangileri ise sadece onlari asil dom da guncellior.
React in arka planda hizli calismasini saglar.


Gerçek DOM’a karşılık gelen sanal bir DOM nesnesidir, yani render edilen DOM’un bir kopyasıdır. 
React her state değişikliğinde render edilen gerçek DOM’u bütünüyle tekrar oluşturmak yerine, 
state değişikliğini Virtual DOM’a yansıtmaktadır. 
Bu sayede gerçek DOM ile ve yeni sanal(virtual) DOM arasındaki farklılıkları tespit ederek, 
gerçek DOM’da yapılacak değişikleri hesaplar ve tek seferde sadece gerçek DOM’da değişen elemanları yeniden render eder. 
Bu şekilde state her değiştiğinde ana DOM’un tüm elemanlarıyla yeniden oluşturulması maliyetinden korunulmuş ve azami performans
iyileştirmesi sağlanmaktadır. Gerçek DOM render edildiğinde, virtual DOM ile eşittir. 
Virtual DOM’da bir değişiklik meydana geldiğinde, 
gerçek DOM’a sadece değişikliğe konu alanlar yansıtılır ve her iki DOM tekrar birbirine eşitlenmiş olur. 
Yani kısaca senin DOM nesneleri tutuyor sonra senin yeni yaptığın değişiklikleri alıyor 
sonra bu ikisini karşılaştırıyor ve değişen kısımları ekliyor bölylece performanstan kazanç sağlamış oluyoruz

=> React only changes what needs to be changed!

=> en cok layout degisimleri(width,heightvb) rendering sayisini arttirir.

=> virtual dom musterinin yani bizim bilgisayarlarimizda tutulur.

=> react otoamatik olarak olusturulan tum elementleri static olarak algilar. eger bir dinamiklik, 
degiskenlik varsa bunu bizim reacta bildirmemiz gerekir.(or: hookllar ile)

DOM :  The Document Object Model (DOM) is a programming interface for web documents. It represents the page so that programs can change the document structure, style, and content. The DOM represents the document as nodes and objects; that way, programming languages can interact with the page.

JSX : 
-JSX stands for JavaScript XML it is a very useful tool for React developers. 
-JSX allows us to write HTML elements in JavaScript and place them in the DOM without any createElement()  and/or appendChild() methods.
-This combination of Javascript and HTML leads to having more powerful applications with boosted performance.
-There's nothing like JSX - neither to JavaScript, nor to the browser. JSX is simply syntactic sugar for creating very specific JavaScript objects.

Component: Components are independent and reusable bits of code. LEGO parcasi denebilir.

State : 
-The state is a built-in React object that is used to contain data or information about the component. A component’s state can change over time; whenever it changes, the component re-renders.
-state componente aittir.
-In other words, the State of a component is an object that holds some information that may change over the lifetime of the component.

Props: 
-Props are arguments passed into React components.
-It is being used for passing data from one component to another.
-But the important part here is that data with props are being passed in a uni-directional flow. (one way from parent to child(One-way Data Binding)). 
-Tek bir componente ait degildir.
https://itnext.io/what-is-props-and-how-to-use-it-in-react-da307f500da0

How does it work: So, to make it faster, React implements a virtual DOM that is basically a DOM tree representation in JavaScript. So when it needs to read or write to the DOM, it will use the virtual representation of it. Then the virtual DOM will try to find the most efficient way to update the browser’s DOM.
https://medium.com/@alex_lobera/introduction-to-react-3000e9cbcd26

=>REACT KURULUMU

1- node.js indir ve kur
node.js bir ortamdir. reactin calistirilmasi icin. (envirenment)
indirdikten sonra kontrol etmek icin, gitbash i ac, node -v yaz.
=> ilgili video ;
https://www.youtube.com/watch?v=MjG-xWBZhTs

2- NPM (nodejs deki uygulamalarin manager i)
node.js yuklendiginde npm otomatik olarak yuklu olarak gelir.
gitbash e, nmp -v yazarak kontrol et.

3- fakat genelde Yarn i tercih ediyoruz.
daha hizli.
yarn i kurmak gerekir.
cdm yi admin olarak ac ya da gitbash e,'npm i -g yarn' yaz.
'yarn -v' yada 'yarn --version' ile kontrol et.

=============
Setup Development Environment
● npm i -g create-react-app (once)
● create-react-app is a project aimed at getting you up
to speed with React in no time. It provides a ready-made
React application starter, so you can dive into building your
app without having to deal with Webpack and Babel
configurations.
==============

extension : ES7 React/ Redux/ GraphQL/ React-Native 
============

PROJE BASLATMAK ICIN;

https://create-react-app.dev/docs/getting-started/

1- projeyi nerde acmak istiyorsan orada gitbash i ac.

2- 'npx create-react-app ProjeninIsmi' yaz.   (turkce karakter, bosluk kullanma)

3- happy hacking i gorunce basari ile yuklendi demektir .

4- gitbash de cikmadan , cd ProjeninIsmi ile projenin icine gir.

5- npm start / yarn start yaz.

6- 'control c' ile uygulamayi durdurabliriz. (browser kapansa da ctrl c yapilmazsa durmaz, browseri mesgul eder.)


VSCODE UZERINDEN PROJEYI BASLATMAK ICIN;

1- vscode u proje dosyasinda ac.

2- terminal -> new terminal -> npm start / yarn start yaz.

3- durdurmak icin 'control c'

4- Durduktan sonra tekrar calistirmak icin npm start/yarn start yazip baslatabliriz.



-------
NOTE :
public klaserunde -> index.html -> body icinde div. id si root.
react icinde yapacagimiz her sey bu div elementinin icine basilacak.

---

HARICI KUTUPHANE EKLEME;

1-control c ile durdur.
2- npm i bootstrap
npm install bootstrap
yarn add bootstrap 

3-yuklendikten sonra package.json -> dependencies e yuklenmesi gerekir kontrol et.


INDIRILEN PROJEYE DEVAM ETME;

1- vscodu o dosyada ac.
2- sol taraftaki yerinden dosyanin uzerine gel. saga tikla. 'open in integrated terminal' i tikla.
3- acilan terminale;
yarn install / npm install yaz. (node_modules u indirmek icin, node_modules olmadan start verilmez.)
4- yarn start de baslat

-> sass i projemizde kullanacaksak bunu node_modules e eklememiz gerekir.
ayni bash(terminal) uzerinden yapmak istiyorsak projeyi durdurup 'yarn add sass' komutu ile yapabliriz.
projeyi durdurmadan yapmak istiyorsak ; solsan projenin ustune gelip bir terminal daha aciyoruz. 'yarn add sass' komutunu yazarak ekliyoruz.
npm icin: npm install sass


=> klasik bootstrap i projemizde kullanablilmek icin 
1- terminale 'yarn add bootsrap '
2- import dosyasini index.js (app.js de olabilir.) e ekle 'import 'bootstrap/dist/css/bootstrap.min.css';'


=> herhangi bir hata veya warning ile karsilasildiginda;
1- hatayi kopyala yapistir ile googla da arat.
2- cikan cozum onerilerinden (stackoverflow) sitesinden cozumlere bak.
3- or : pacckaage.js a sunu ekle. 
4- yeniden yarn yukle yani projeyi tekrar bastan calistir.


=> Bootstraptan aldiktan sonra duzenleme yapilmasinin unutulmamasi lazim.
or: kapanis taglari </>
class -> className
for -> htmlFor

=> reactta icon kullanimi icin
https://react-icons.github.io/react-icons/

bu kutupphanenin eklenmesi gerekir.
1-yeni terminal ac
2- yarn add react-icons  
npm install react-icons
yaparak yukle.
3- sayfaya import yap.
import { FaReact } from 'react-icons/fa'; 
buradaki FaReact yukaridaki sayfadanki icon un ismi.
4- Fareact ile kullanima hazir.


=> => yarn add bootstrap axios react-icons seklinden birden fazla sekilde de ekleme yapabliriz.

=> postman ile (get)istek yapmak:

1- api adresini postman a yapistir.
2- get i sec . gonder e bas.

not :surekli bu islemi yapacaksan send butonunun ustundeki save butonu ile kaydedebilirsin.


=> postman ile post islemi yapmak:

1- api adresini postmana yapistir.
2- post u sec.
3- body kismina gel. raw u sec. text kismindan da JSON sec.
verilerini yaz.

or :

{
"id": 421,
"title": "sfgr",
"description": "222",
"published": false,
"createdAt": "2022-07-03T06:37:20.832Z",
"updatedAt": "2022-07-03T06:37:20.832Z"
},
{
"id": 426,
"title": "12",
"description": "23",
"published": false,
"createdAt": "2022-07-03T07:20:00.979Z",
"updatedAt": "2022-07-03T07:20:00.979Z"
}


4- sende butonuna bas.



=> postman ile delete islemi yapmak:

silme islemi genelde id lere gore yapilir.
base url in sonuna id no eklenir.

1- linki yaz . sonuna /idnosunu yaz . 

or: 
......./tutorials/273

2- delete i sec.

3- send butonuna bas.


=> styled component kurulusu

vscode : https://marketplace.visualstudio.com/items?itemName=styled-components.vscode-styled-components
vscode : Styled-Snippets

npm -> npm install --save styled-components
yarn -> yarn add styled-components


REACT ROUTER KURULUMU

https://reactrouter.com/

 => npm install react-router-dom
=> yarn add react-router-dom


===================================================================

//? api key ve id yyi direk burada acik(dierk olarak)kullanmak uygun degildir(herkese acik bi sekilde, githuba gondermek uygun degildir) . 
bunlari gizleyerek gondermek icin:
  // 1- proje dosyasinda new file ile yeni bir dosya ac
  // 2- ".env" adinda yeni belgeyi olustur.(ana dizinde olacak, gitignore ile ayni dizinde olmali ONEMLI !)
  // 3- dosya icine :
  // REACT_APP_APP_KEY = sdfsdfsdfs
  // REACT_APP_APP_ID = sdfsdfsdfds345354
  // 4- home dosyasine geri gel. 
  //   const APP_ID = process.env.REACT_APP_APP_ID;
  // const APP_KEY = process.env.REACT_APP_APP_KEY;
  // olarak tanimla.
  //! boyle bir env dosyasi yaptiysan projeyi durdurup ctrl+c yeniden yarn start diyerek baslatmak gerekir.env dosyasi icinde bir degisiklik 
yaparsan projeyi yine durdurup yeniden baslatmak gerekir.
  // env dosyalari default olarak gitignora eklenmis durumda olur. kontrol et yoksa #misc in altindaki yere .env olarak ekle.
  //* netfly dan deploy ederken .env dosyasini gormez cunku gitignoreun icinde. bunun ucun netlfydan ayarinin yapilmasi lazim.
  // 1- projeyi deploy et
  // 2- projenin ustune tikla
  // 3- site settings e tikla
  // 4- sol taraftaki yerden build & deploy a tikla.
  // 5- altinda acilan yerden Environment a tikla.
  // 6- acilan yerden Envirenment variables yerinde edit e tikla ve .env icinde olan variables lari buraya gir.

==================================================================

materıal uı kurulumu:

1- https://mui.com/
2- installion kismina tikla
3- terminale:
npm install @mui/material @emotion/react @emotion/styled veya
yarn add @mui/metarial @emotion/react @emotion/styled
4- package.json da dependicies kismindan kontrol et
5- roboto fontu kur , index.html e
<link
  rel="stylesheet"
  href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap"
/>

6- font icons 
<link
  rel="stylesheet"
  href="https://fonts.googleapis.com/icon?family=Material+Icons"
/>


7- svg icons
npm install @mui/icons-material

yarn add @mui/icons-material

---------------------------------------

REDUX :

// redux : harici bir kutuphanedir.
// global state management kutuphanesidir.
// gecmisi flux ve elm neye dayanir.
// dan abramov tarafindan gelistirilimistir.(reactin gelistiricisi)
// complex statelerin oldugu uygulamalarda tercih edileblir.

//!kurulumu
// npm install redux react-redux
// yarn add redux react-redux